name: Tests

on:
  push:
    branches: [master]
  pull_request:

jobs:
  Tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2
      - name: Install Bazel - Ubuntu
        run: .github/workflows/scripts/install_ubuntu.sh
        if: ${{ github.matrix.os == 'ubuntu-18.04' }}
      - name: Install Bazel - MacOS
        run: .github/workflows/scripts/install_macos.sh
        if: ${{ github.matrix.os == 'macos-latest' }}
      - name: Run tests
        run: .github/workflows/scripts/run_tests.sh

  TestsPython:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r psi_cardinality/python/requirements.txt
      - name: Python linters
        run: .github/workflows/scripts/lint_python.sh
      - name: Install Bazel - Ubuntu
        run: .github/workflows/scripts/install_ubuntu.sh
      - name: Run tests
        run: .github/workflows/scripts/run_python_tests.sh

  Linters:
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchains
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Go dependencies
        run: go get -u golang.org/x/lint/golint
      - uses: actions/checkout@v2
      - name: C++ linters
        run: .github/workflows/scripts/lint_cpp.sh
      - name: Go linters
        run: .github/workflows/scripts/lint_go.sh

